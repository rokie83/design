//shadow mixin

// insets
$inset-card: inset 0 0 0 1px rgba(255, 255, 255, 1);
$inset-container: inset 0 0 0 1px rgba(255, 255, 255, 0.05);

// shadows
$shadow-z-1: 0 1px 5px 0 rgba(0, 0, 0, 0.12), 0 2px 2px 0 rgba(0, 0, 0, 0.14);
$shadow-z-2: 0 4px 5px 0 rgba(0, 0, 0, 0.14), 0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.4);
$shadow-z-3: 0 6px 10px 0 rgba(0, 0, 0, 0.14), 0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.4);
$shadow-z-4: 0 8px 10px 1px rgba(0, 0, 0, 0.14), 0 3px 14px 2px rgba(0, 0, 0, 0.12), 0 5px 5px -3px rgba(0, 0, 0, 0.4);
$shadow-z-5: 0 16px 24px 2px rgba(0, 0, 0, 0.14), 0 6px 30px 5px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.4);

// shadowlist
$inset-shadow-list: $inset-card $inset-container;
$shadow-list: $shadow-z-1 $shadow-z-2 $shadow-z-3 $shadow-z-4 $shadow-z-5;

//   add shadow:
//   - add the shadow with/without inset
//   - add the data-shadow attribute with/without inset (for all shadows)
//     |- [data-shadow="INDEX"] access for frontend scripts

//   default shadows
//     |- @include mix-shadow(SHADOW, null);
//         |- SHADOW = 1, 2, 3, 4, 5  INDEX OF ($_shadow-list ARRAY)
//         |- null                    no inset

//   custom shadow
//     |- @include mix-shadow(SHADOW, INSET);
//         |- SHADOW = 1, 2, 3, 4, 5  INDEX OF ($_shadow-list ARRAY)
//         |- INSET  = 1, 2           INDEX OF ($_inset-shadow-list ARRAY)

// default mixin (prefer this)
@mixin mix-shadow($z-level, $shadow-custom) {
    $shadow-suffix: "";
    @if $shadow-custom {
        box-shadow: nth($shadow-list, $z-level), nth($inset-shadow-list, $shadow-custom);

        $shadow-suffix: "," nth($inset-shadow-list, $shadow-custom);
    } @else {
        box-shadow: nth($shadow-list, $z-level);
    }
    @for $i from 1 through length($shadow-list) {
        &[data-shadow="#{$i}"] {
            box-shadow: nth($shadow-list, $i)#{$shadow-suffix};
        }
    }
}

// use this mixin only to overwrite component styles
@mixin mix-shadow-important($z-level, $shadow-custom) {
    $shadow-suffix: "";
    @if $shadow-custom {
        // sass-lint:disable no-important
        box-shadow: nth($shadow-list, $z-level), nth($inset-shadow-list, $shadow-custom) !important;

        $shadow-suffix: "," nth($inset-shadow-list, $shadow-custom);
    } @else {
        // sass-lint:disable no-important
        box-shadow: nth($shadow-list, $z-level) !important;
    }
    @for $i from 1 through length($shadow-list) {
        &[data-shadow="#{$i}"] {
            // sass-lint:disable no-important
            box-shadow: nth($shadow-list, $i)#{$shadow-suffix} !important;
        }
    }
}

// example

//.some-class {
//    //$_shadow-z-2 without inset
//    @include mix-shadow(2, null);
//}

//.some-card-class {
//    //$_shadow-z-3 with card inset
//    @include mix-shadow(3, 1);
//}

//.some-container-class {
//    //$_shadow-z-1 with container inset
//    @include mix-shadow(1, 2);
//}
